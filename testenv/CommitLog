Detailed explanations on the working of each commit.

This file will remain only on the working branch of the development and will not be copied
into the release commits.

The CommitLog file will follow the same conventions as the GNU ChangeLog files.

2013-06-08  Darshit Shah  <darnir@gmail.com>

	* runTest.py: Make the call to start_server() as early as possible so
	as to provide more time for the server to initialize before we make
	the call to Wget. This eliminates the need for a sleep(2) statement.

2013-06-08  Darshit Shah  <darnir@gmail.com>

	* runTest.py: Read the list of expected files to be downloaded and
	generate a list. The actual test for the files is not yet implemented
	and will be implemented later.
	* TestProto: Add a new element, File. This elemenent defines the names
	of the files that are expected to be downloaded by Wget. Only one file
	per element.

2013-06-07  Darshit Shah  <darnir@gmail.com>

	* runTest.py: Read the Expected Return Code, the actual Return Code
	and compare to identify whether the Test was successful or not. We
	must also test the files being returned for a complete test. However,
	this is to be implemented next.
	Edit the Exit Code when the script fails due to non-existing file to
	24. This is done so as not to interfere with the standard return codes
	of Wget. The number was chosen arbitrarily.
	Make the script exit with the return code that Wget returns. This will
	be used later when a runAll module is implemented.

2013-06-07  Darshit Shah  <darnir@gmail.com>

	* runTest.py: Build the command line that is to be executed in a List.
	Build the list of URLs also and append to the commandline list.
	Pass the last to a sys.call() function and execute Wget.
	* TestProto: Rename Options to Option, to correctly reflect that it
	can take only one Option between each Element.
	Add 2 more options to demostrate how sending multiple options works.
	** Maybe, an interactive script should be written to generate Test
	Files? **

2013-06-06  Darshit Shah  <darnir@gmail.com>

	* runTest.py: Add a check to ensure that the Filename passed to the
	script actually exists. Else, exit.

2013-06-06  Darshit Shah  <darnir@gmail.com>

	* TestProto: Add an attribute name to InputFile.
	Add a second File to demonstrate how multiple input files can work.
	* runTest.py: Remove hard-coded link to Root[0]. Instead read parse
	tree and find all input Files.

2013-06-06  Darshit Shah  <darnir@gmail.com>

	* TestProto: Add New element, Options. This element defines the list
	of command line arguments to be passed to Wget on invokation.

2013-06-06  Darshit Shah  <darnir@gmail.com>

	* runTest.py: Generate path to local build of Wget.

2013-06-06  Darshit Shah  <darnir@gmail.com>

	* runTest.py: Improve automation. Read file name from command line and
	use that as a Test Case. Some requirements are marked as TODO in
	comments.
	* HTTPServer.py (initServer): Add support to accept File details that
	will be used by the Server.

2013-06-06  Darshit Shah  <darnir@gmail.com>

	* TestProto: Minor Changes. Most importantly surround HTML syntax in
	CDATA to prevent them from being read as XML Tags. This is required
	since the TestProto file is read as a valid XML Document.
	* IMPORTANT *: The TestProto file must always be maintained as a valid
	XML File, since the parsing engine expects it to be so.

2013-06-05  Darshit Shah  <darnir@gmail.com>

	* runTests.py: Add Responsibilities that this file must handle as a
	comment. No new feature / functionality.

2013-06-05  Darshit Shah  <darnir@gmail.com>

	* HTTPServer.py: Add new classes, StoppableHTTPRequestHandler and
	StoppableHTTPServer that extend the standard classes. These classes
	provide a new method, QUIT which is used to exit the running server.
	* runTests.py (stop_server): Define new function that sends a HTTP
	QUIT Request to the Server to exit it.
	* runTests.py: Spawn the Server in a new process and return control to
	the parent.
	The Server currently runs for only 10 seconds. This will be removed as
	automation to run TestFiles is added later.

2013-06-04  Darshit Shah  <darnir@gmail.com>

	* HTTPServer.py: Convert previous functions to private and create a
	public Caller method. This brings the Server more in-line with it's
	final working.
	* runTests.py: (newfile)
	Currently it simply initializes a new HTTPServer. If multiple servers
	need to be spawned, this may be the right place to do it.

2013-06-04  Darshit Shah  <darnir@gmail.com>

	* TestProto: (newfile)
	A Prototype file that shows how the test cases should be defined.
	Ideally, this file should be copied and edited to write new test
	cases.
	This file will be edited and enchanced as and when required.

2013-06-04  Darshit Shah  <darnir@gmail.com>

	* HTTPServer.py: Comment out Threading Code. We do not need multiple
	servers as yet.
	Edit the server port to a sane vale of 8090.
	Return the correct Content-Length header in a GET Response.
	Make the server serve from the current directory instead.
	Edit the 404 Response message to "Not Found"

2013-06-03  Darshit Shah  <darnir@gmail.com>

	* HTTPServer.py: (newfile)
	Adds a new basic HTTP Server.
	This commit introduces a new HTTP Server that serves on port 1111 and
	2222 through two threads. This will allow atleast two tests to run
	simultaneously.
	The HTTP Server serves local files from the root directory.
	Currently, this Server supports only the HTTP GET Request and returns
	only a 200 OK Status or a 404 Not Found.
	Initial support for POST Requests is being implemented.
	* README: (newfile)
	Adds a README file for basic documentation about the test suite.
	* CommitLog: (newfile)
	This File
